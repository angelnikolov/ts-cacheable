name: 🔒 Dry Run - NPM Release Preview

on:
  push:
    branches:
      - master  # Only run this on master for now

jobs:
  release:
    name: Dry-run NPM release
    runs-on: ubuntu-latest

    permissions:
      contents: read    # Only read permissions for safety

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: 'https://registry.npmjs.org/'

      - name: 📥 Install dependencies
        run: |
            npm ci
            npm install rxjs@6.2.0

      - name: 🧪 Run tests
        run: npm test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.0.7
        with:
            files: ./coverage/lcov/coverage.xml 
            token: ${{ secrets.CODECOV_TOKEN }}
            fail_ci_if_error: true
        

      - name: 🔍 Get current version
        id: version_info
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current package version is: $CURRENT_VERSION"
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      # - name: 🚨 Bump version (DISABLED)
      #   id: version_step
      #   run: |
      #     npm version patch --no-git-tag-version
      #     NEW_VERSION=$(node -p "require('./package.json').version")
      #     echo "Bumped to version: $NEW_VERSION"
      #     echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: 🪵 Simulate version bump
        id: version_step
        run: |
          SIMULATED_NEW_VERSION=$(node -p "require('./package.json').version.split('.').map((n, i, arr) => i === 2 ? ++n : n).join('.')") # Simulates patch bump
          echo "Simulated version bump to: $SIMULATED_NEW_VERSION"
          echo "version=$SIMULATED_NEW_VERSION" >> $GITHUB_OUTPUT

      # - name: ✅ Commit and tag version (DISABLED)
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git commit -am "chore: release v${{ steps.version_step.outputs.version }}"
      #     git tag v${{ steps.version_step.outputs.version }}
      #     git push origin main --follow-tags

      - name: 🪵 Simulate git tag creation
        run: |
          echo "Would commit changes and tag: v${{ steps.version_step.outputs.version }}"
          echo "Simulated git command: git tag v${{ steps.version_step.outputs.version }}"

      # - name: 🚀 Publish to NPM (DISABLED)
      #   run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        env:
            CI: true

      - name: 🪵 Simulate NPM publish
        run: |
          echo "Would publish version: ${{ steps.version_step.outputs.version }} to NPM"
